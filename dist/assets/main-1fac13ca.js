(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))i(a);new MutationObserver(a=>{for(const s of a)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function r(a){const s={};return a.integrity&&(s.integrity=a.integrity),a.referrerPolicy&&(s.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?s.credentials="include":a.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(a){if(a.ep)return;a.ep=!0;const s=r(a);fetch(a.href,s)}})();const U={parseActiveUrlWithCombiner(){const e=window.location.hash.slice(1).toLowerCase(),t=this._urlSplitter(e);return this._urlCombiner(t)},parseActiveUrlWithoutCombiner(){const e=window.location.hash.slice(1).toLowerCase();return this._urlSplitter(e)},_urlSplitter(e){const t=e.split("/");return{resource:t[1]||null,id:t[2]||null,verb:t[3]||null}},_urlCombiner(e){return(e.resource?`/${e.resource}`:"/")+(e.id?"/:id":"")+(e.verb?`/${e.verb}`:"")}},b="https://story-api.dicoding.dev/v1";class k{static async register({name:t,email:r,password:i}){try{const s=await(await fetch(`${b}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,email:r,password:i})})).json();return s.error?{error:!0,message:s.message}:{error:!1,data:s}}catch(a){return{error:!0,message:a.message}}}static async login({email:t,password:r}){try{const a=await(await fetch(`${b}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:r})})).json();return a.error?{error:!0,message:a.message}:(localStorage.setItem("token",a.loginResult.token),{error:!1,data:a.loginResult})}catch(i){return{error:!0,message:i.message}}}static async getAllStories(){try{const t=localStorage.getItem("token"),r=t?{Authorization:`Bearer ${t}`}:{},a=await(await fetch(`${b}/stories`,{headers:r})).json();return a.error?{error:!0,message:a.message}:{error:!1,data:a.listStory}}catch(t){return{error:!0,message:t.message}}}static async addStory({description:t,photoFile:r,lat:i,lon:a}){try{const s=localStorage.getItem("token");if(!s)return{error:!0,message:"Anda harus login terlebih dahulu"};const n=new FormData;return n.append("description",t),n.append("photo",r),i&&n.append("lat",i),a&&n.append("lon",a),(await fetch(`${b}/stories`,{method:"POST",headers:{Authorization:`Bearer ${s}`},body:n})).json()}catch(s){return{error:!0,message:s.message}}}static checkAuthentication(){return!!localStorage.getItem("token")}static logout(){localStorage.removeItem("token")}}const H=(e,t)=>t.some(r=>e instanceof r);let D,N;function V(){return D||(D=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function j(){return N||(N=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const $=new WeakMap,T=new WeakMap,F=new WeakMap,_=new WeakMap,I=new WeakMap;function W(e){const t=new Promise((r,i)=>{const a=()=>{e.removeEventListener("success",s),e.removeEventListener("error",n)},s=()=>{r(f(e.result)),a()},n=()=>{i(e.error),a()};e.addEventListener("success",s),e.addEventListener("error",n)});return t.then(r=>{r instanceof IDBCursor&&$.set(r,e)}).catch(()=>{}),I.set(t,e),t}function G(e){if(T.has(e))return;const t=new Promise((r,i)=>{const a=()=>{e.removeEventListener("complete",s),e.removeEventListener("error",n),e.removeEventListener("abort",n)},s=()=>{r(),a()},n=()=>{i(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",s),e.addEventListener("error",n),e.addEventListener("abort",n)});T.set(e,t)}let B={get(e,t,r){if(e instanceof IDBTransaction){if(t==="done")return T.get(e);if(t==="objectStoreNames")return e.objectStoreNames||F.get(e);if(t==="store")return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}return f(e[t])},set(e,t,r){return e[t]=r,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function z(e){B=e(B)}function J(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(t,...r){const i=e.call(E(this),t,...r);return F.set(i,t.sort?t.sort():[t]),f(i)}:j().includes(e)?function(...t){return e.apply(E(this),t),f($.get(this))}:function(...t){return f(e.apply(E(this),t))}}function K(e){return typeof e=="function"?J(e):(e instanceof IDBTransaction&&G(e),H(e,V())?new Proxy(e,B):e)}function f(e){if(e instanceof IDBRequest)return W(e);if(_.has(e))return _.get(e);const t=K(e);return t!==e&&(_.set(e,t),I.set(t,e)),t}const E=e=>I.get(e);function Q(e,t,{blocked:r,upgrade:i,blocking:a,terminated:s}={}){const n=indexedDB.open(e,t),c=f(n);return i&&n.addEventListener("upgradeneeded",o=>{i(f(n.result),o.oldVersion,o.newVersion,f(n.transaction),o)}),r&&n.addEventListener("blocked",o=>r(o.oldVersion,o.newVersion,o)),c.then(o=>{s&&o.addEventListener("close",()=>s()),a&&o.addEventListener("versionchange",l=>a(l.oldVersion,l.newVersion,l))}).catch(()=>{}),c}const X=["get","getKey","getAll","getAllKeys","count"],Y=["put","add","delete","clear"],C=new Map;function P(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(C.get(t))return C.get(t);const r=t.replace(/FromIndex$/,""),i=t!==r,a=Y.includes(r);if(!(r in(i?IDBIndex:IDBObjectStore).prototype)||!(a||X.includes(r)))return;const s=async function(n,...c){const o=this.transaction(n,a?"readwrite":"readonly");let l=o.store;return i&&(l=l.index(c.shift())),(await Promise.all([l[r](...c),a&&o.done]))[0]};return C.set(t,s),s}z(e=>({...e,get:(t,r,i)=>P(t,r)||e.get(t,r,i),has:(t,r)=>!!P(t,r)||e.has(t,r)}));const Z="story-app-db",ee=2,g="stories",y="favorite-stories",p=Q(Z,ee,{upgrade(e,t,r){t<1&&(e.objectStoreNames.contains(g)||(e.createObjectStore(g,{keyPath:"id"}),console.log(`Object store ${g} berhasil dibuat`))),t<2&&(e.objectStoreNames.contains(y)||(e.createObjectStore(y,{keyPath:"id"}),console.log(`Object store ${y} berhasil dibuat`)))}}),u={async getAllStories(){return(await p).getAll(g)},async getStory(e){return e?(await p).get(g,e):null},async saveStory(e){if(e.id)return(await p).put(g,e)},async deleteStory(e){return(await p).delete(g,e)},async searchStories(e){return(await this.getAllStories()).filter(r=>{const i=(r.name||"").toLowerCase(),a=e.toLowerCase();return i.includes(a)})},async getAllFavorites(){return(await p).getAll(y)},async getFavorite(e){return e?(await p).get(y,e):null},async saveFavorite(e){if(e.id)return(await p).put(y,e)},async deleteFavorite(e){return(await p).delete(y,e)},async searchFavorites(e){return(await this.getAllFavorites()).filter(r=>{const i=(r.name||"").toLowerCase(),a=e.toLowerCase();return i.includes(a)})}};class A{static async fetchAll(){try{const{error:t,data:r,message:i}=await k.getAllStories();if(!t)return await this._cacheToIDB(r),{error:!1,data:r};console.warn("API gagal. Coba ambil data dari IndexedDB...");const a=await u.getAllStories();return a.length>0?{error:!1,data:a,isOffline:!0}:{error:!0,message:"Gagal memuat cerita. Coba periksa koneksi internet."}}catch(t){return console.error("Gagal di fetchAll:",t),{error:!0,message:t.message}}}static async _cacheToIDB(t){try{await Promise.all(t.map(r=>u.saveStory(r))),console.info(`${t.length} cerita disimpan ke IndexedDB`)}catch(r){console.error("Gagal menyimpan ke IndexedDB:",r)}}static async getLocalStories(){return u.getAllStories()}static async removeStory(t){try{return await u.deleteStory(t),{error:!1,message:"Cerita berhasil dihapus dari penyimpanan lokal."}}catch(r){return{error:!0,message:r.message}}}}class te{constructor({view:t}){this._viewRef=t,this._storyData=A}async fetchStories(){try{this._viewRef.showLoading();const{error:t,data:r,message:i,isOffline:a}=await this._storyData.getAllStories();return t?(this._viewRef.showError(i),[]):(r.length===0?this._viewRef.showEmpty():(this._viewRef.showStories(r),a&&this._displayOfflineBanner()),r)}catch(t){return this._viewRef.showError(t.message),[]}}async removeStoryById(t){try{const{error:r,message:i}=await this._storyData.deleteStory(t);return r?(this._viewRef.showError(i),!1):(this._displayToast(i),await this.fetchStories(),!0)}catch(r){return this._viewRef.showError(r.message),!1}}initMapView(t,r){const i=L.map(t).setView([-.789275,113.921327],5);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(i);const a=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community"}),s={Street:L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}),Satellite:a,Topography:L.tileLayer("https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",{attribution:'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a>'})};return L.control.layers(s).addTo(i),r.forEach(n=>{n.lat&&n.lon&&L.marker([n.lat,n.lon]).addTo(i).bindPopup(`
          <div class="popup-content">
            <img src="${n.photoUrl}" alt="${n.name}" style="width: 100px; height: auto;">
            <h3>${n.name}</h3>
            <p>${n.description.substring(0,100)}${n.description.length>100?"...":""}</p>
          </div>
        `)}),i}_displayOfflineBanner(){const t=document.createElement("div");t.classList.add("offline-notification"),t.innerHTML=`
      <div class="offline-icon">
        <i class="fas fa-wifi-slash"></i>
      </div>
      <div class="offline-message">
        <strong>Anda sedang melihat data offline</strong>
        <p>Koneksi internet tidak tersedia. Data ditampilkan dari penyimpanan lokal.</p>
      </div>
    `,document.body.appendChild(t),setTimeout(()=>{t.classList.add("fade-out"),setTimeout(()=>{t.parentNode&&document.body.removeChild(t)},300)},5e3)}_displayToast(t){const r=document.createElement("div");r.classList.add("toast"),r.textContent=t,document.body.appendChild(r),setTimeout(()=>{r.classList.add("toast-hide"),setTimeout(()=>{document.body.removeChild(r)},300)},3e3)}}const x=e=>{const t=c=>{const o={year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit"};return new Date(c).toLocaleDateString("id-ID",o)},r=(c,o)=>c.length<=o?c:c.slice(0,o)+"...",a=e.isOffline?'<span class="offline-indicator" title="Data dari penyimpanan lokal"><i class="fas fa-database"></i></span>':"",s=e.photo||e.photoUrl||e.image||e.url||e.pictureId||e.imageUrl;let n="https://via.placeholder.com/300x200?text=No+Image";return s&&(n=s.startsWith("http")?s:`https://story-api.dicoding.dev/images/stories/${s}`),`
    <article class="story-item" id="story-${e.id}">
      <img src="${n}" alt="${e.name||"User"}" />
      <div class="story-item__content">
        <div class="story-item__header">
          <h3 class="story-item__name">${e.name||"Tanpa Nama"} ${a}</h3>
          <div class="story-item__favorite" id="favoriteButtonContainer-${e.id}"></div>
        </div>
        <p class="story-item__description">${r(e.description||e.desc||"",150)}</p>
        <div class="story-item__footer">
          <p class="story-item__date">${t(e.createdAt||e.created_at||new Date)}</p>
          <div class="story-location">
            ${e.lat&&e.lon?'<i class="fas fa-map-marker-alt"></i> Lokasi tersedia':'<i class="fas fa-map-marker-alt text-muted"></i> Tidak ada lokasi'}
          </div>
        </div>
      </div>
    </article>
  `},v=({title:e,content:t})=>`
      <div class="page">
        <h2 class="page__title">${e}</h2>
        <div class="page__content">
          ${t}
        </div>
      </div>
    `,m={vapidPublicKey:"BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk",async requestPermission(){return"Notification"in window?await Notification.requestPermission()==="granted":(console.error("Browser tidak mendukung notifikasi"),!1)},async getServiceWorkerRegistration(){if(!("serviceWorker"in navigator))return console.error("Browser tidak mendukung service worker"),null;try{const e=await navigator.serviceWorker.ready;return console.log("Service worker siap:",e),e}catch(e){return console.error("Error mendapatkan service worker:",e),null}},urlBase64ToUint8Array(e){const t="=".repeat((4-e.length%4)%4),r=(e+t).replace(/-/g,"+").replace(/_/g,"/"),i=window.atob(r),a=new Uint8Array(i.length);for(let s=0;s<i.length;++s)a[s]=i.charCodeAt(s);return a},async subscribeToPushNotification(){try{if(!("serviceWorker"in navigator)||!("PushManager"in window))return{error:!0,message:"Browser tidak mendukung push notification"};const e=await this.getServiceWorkerRegistration();if(!e)return{error:!0,message:"Service worker tidak siap"};if(!await this.requestPermission())return{error:!0,message:"Izin notifikasi ditolak"};let r=await e.pushManager.getSubscription();r&&(console.log("Unsubscribing from existing subscription"),await r.unsubscribe()),console.log("Creating new push subscription");const i=this.urlBase64ToUint8Array(this.vapidPublicKey);r=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:i}),console.log("Push subscription created:",r);const a=localStorage.getItem("token");if(!a)return{error:!0,message:"Anda harus login terlebih dahulu"};const s=r.toJSON(),{endpoint:n,keys:c}=s;console.log("Sending subscription to server:",{endpoint:n,keys:c});const l=await(await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({endpoint:n,keys:{p256dh:c.p256dh,auth:c.auth}})})).json();return console.log("Server response:",l),l.error?{error:!0,message:l.message}:(localStorage.setItem("pushSubscription",JSON.stringify({endpoint:n,keys:c})),{error:!1,data:l.data})}catch(e){return console.error("Error saat subscribe push notification:",e),{error:!0,message:e.message}}},async unsubscribeFromPushNotification(){try{if(!("serviceWorker"in navigator)||!("PushManager"in window))return{error:!0,message:"Browser tidak mendukung push notification"};const t=await(await this.getServiceWorkerRegistration()).pushManager.getSubscription();if(!t)return{error:!0,message:"Tidak ada langganan yang aktif"};const{endpoint:r}=t;console.log("Unsubscribing endpoint:",r);const i=localStorage.getItem("token");if(!i)return{error:!0,message:"Anda harus login terlebih dahulu"};const s=await(await fetch("https://story-api.dicoding.dev/v1/notifications/subscribe",{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${i}`},body:JSON.stringify({endpoint:r})})).json();return console.log("Server unsubscribe response:",s),await t.unsubscribe(),console.log("Successfully unsubscribed locally"),localStorage.removeItem("pushSubscription"),{error:!1,message:s.message}}catch(e){return console.error("Error saat unsubscribe push notification:",e),{error:!0,message:e.message}}},async isSubscribed(){if(!("serviceWorker"in navigator)||!("PushManager"in window))return!1;try{const e=await this.getServiceWorkerRegistration();return e?!!await e.pushManager.getSubscription():!1}catch(e){return console.error("Error cek status langganan:",e),!1}},isNotificationSupported(){return"Notification"in window},async sendTestNotification(){try{if(Notification.permission!=="granted")return{error:!0,message:"Izin notifikasi belum diberikan"};const e=await this.getServiceWorkerRegistration();return e?(await e.showNotification("Test Notification",{body:"Ini adalah test notifikasi",icon:"/icons/icon-192x192.png",badge:"/icons/icon-72x72.png",vibrate:[100,50,100]}),{error:!1,message:"Test notifikasi berhasil dikirim"}):{error:!0,message:"Service worker tidak siap"}}catch(e){return console.error("Error mengirim test notifikasi:",e),{error:!0,message:e.message}}}},d={async fetchById(e){return u.getFavorite(e)},async fetchAll(){return u.getAllFavorites()},async save(e){return u.saveFavorite(e)},async remove(e){return u.deleteFavorite(e)},async search(e){return u.searchFavorites(e)}},re=(e,t=!1)=>`
  <button 
    aria-label="${t?"hapus dari favorit":"tambah ke favorit"}" 
    id="favoriteButton-${e.id}" 
    class="favorite-btn ${t?"favorited":""}"
    title="${t?"Hapus dari Favorit":"Tambah ke Favorit"}"
  >
    <i class="fa-heart ${t?"fas":"far"}" aria-hidden="true"></i>
  </button>
`,S=({story:e,favoriteStories:t,onFavoriteClick:r})=>{const i=document.createElement("div");return i.style.display="inline-block",(()=>{const s=t.some(c=>c.id===e.id);i.innerHTML=re(e,s);const n=i.querySelector(`#favoriteButton-${e.id}`);n.addEventListener("click",async c=>{c.stopPropagation(),c.preventDefault();const o=n.querySelector("i"),l=o.className;o.className="fas fa-spinner fa-spin",n.disabled=!0;try{await r(e)}finally{o.className=l,n.disabled=!1}})})(),i},ie={async render(){return v({title:"Daftar Cerita",content:`
        <div class="search-container">
          <input type="text" id="search-input" placeholder="Cari cerita..." />
          <button id="search-button">Cari</button>
        </div>
        <div class="notification-controls">
          <button id="notification-button" class="btn btn-primary">
            <i class="fas fa-bell"></i> <span id="notification-status">Memuat status notifikasi...</span>
          </button>
          <button id="test-notification-button" class="btn btn-secondary" style="display: none;">
            <i class="fas fa-paper-plane"></i> Test Notifikasi
          </button>
        </div>
        <div class="map-container" id="storyMap"></div>
        <div class="offline-status-container" id="offline-status"></div>
        <div class="stories" id="stories"></div>
      `})},async afterRender(){try{if(!document.querySelector("#stories")){console.error("Stories container not found");return}this.showLoading();const t=document.querySelector("#storyMap"),r=document.querySelector("#search-input"),i=document.querySelector("#search-button"),a=document.querySelector("#offline-status"),s=document.querySelector("#notification-button"),n=document.querySelector("#notification-status"),c=document.querySelector("#test-notification-button");a&&this._checkConnectivity(a),s&&n&&c&&await this._initNotificationControls(s,n,c);const o=await A.fetchAll();if(!o.error&&o.data.length>0){const l=o.data.map(h=>({...h,isOffline:o.isOffline}));await this.showStories(l),t&&(this._presenter=new te({view:this}),this._presenter.initMapView(t,l)),i&&r&&(i.addEventListener("click",()=>{const h=r.value.trim();this._filterStories(h,l)}),r.addEventListener("keyup",h=>{if(h.key==="Enter"){const w=r.value.trim();this._filterStories(w,l)}}))}else o.error?this.showError(o.message):this.showEmpty()}catch(e){console.error("Error in afterRender:",e),this.showError(e.message)}},async _initNotificationControls(e,t,r){if(!("Notification"in window)||!("PushManager"in window)){e.disabled=!0,t.textContent="Browser tidak mendukung notifikasi";return}if(!!!localStorage.getItem("token")){e.disabled=!0,t.textContent="Login untuk mengaktifkan notifikasi";return}this.updateNotificationStatus(e,t,r),e.addEventListener("click",async()=>{if(await m.isSubscribed()){e.disabled=!0,t.textContent="Menonaktifkan notifikasi...";const s=await m.unsubscribeFromPushNotification();s.error?alert(`Gagal menonaktifkan notifikasi: ${s.message}`):alert("Notifikasi berhasil dinonaktifkan!")}else{e.disabled=!0,t.textContent="Mengaktifkan notifikasi...";const s=await m.subscribeToPushNotification();s.error?alert(`Gagal mengaktifkan notifikasi: ${s.message}`):alert("Notifikasi berhasil diaktifkan!")}this.updateNotificationStatus(e,t,r)}),r.addEventListener("click",async()=>{const a=await m.sendTestNotification();a.error&&alert(`Gagal mengirim notifikasi test: ${a.message}`)})},async updateNotificationStatus(e,t,r){e.disabled=!0;try{await m.isSubscribed()?(t.textContent="Nonaktifkan Notifikasi",r.style.display="inline-block"):(t.textContent="Aktifkan Notifikasi",r.style.display="none"),e.disabled=!1}catch(i){console.error("Error checking subscription status:",i),t.textContent="Error: Gagal memeriksa status",e.disabled=!1}},_setupDeleteButtons(){console.log("Setting up delete buttons"),document.querySelectorAll(".delete-button").forEach(r=>{r.replaceWith(r.cloneNode(!0))});const t=document.querySelectorAll(".delete-button");console.log(`Found ${t.length} delete buttons`),t.forEach(r=>{r.addEventListener("click",async i=>{console.log("Delete button clicked");const a=r.dataset.id;if(console.log(`Story ID: ${a}`),confirm("Apakah Anda yakin ingin menghapus cerita ini?"))try{console.log(`Deleting story ${a} from IndexedDB`),await A.deleteStory(a);const s=document.getElementById(`story-${a}`);s&&(s.remove(),console.log("Removed story element from DOM")),alert("Cerita berhasil dihapus")}catch(s){console.error("Error deleting story:",s),alert(`Gagal menghapus cerita: ${s.message}`)}})})},_checkConnectivity(e){const t=()=>{navigator.onLine?e.innerHTML="":e.innerHTML=`
          <div class="offline-banner">
            <i class="fas fa-exclamation-triangle"></i>
            Anda sedang offline. Menampilkan data dari penyimpanan lokal.
          </div>
        `};t(),window.addEventListener("online",t),window.addEventListener("offline",t)},_filterStories(e,t){if(!e){this.showStories(t);return}const r=t.filter(i=>i.name.toLowerCase().includes(e.toLowerCase())||i.description.toLowerCase().includes(e.toLowerCase()));if(r.length>0)this.showStories(r);else{const i=document.querySelector("#stories");i.innerHTML=`<div class="empty">Tidak ada cerita yang sesuai dengan pencarian "${e}"</div>`}},showLoading(){const e=document.querySelector("#stories");e&&(e.innerHTML='<div class="loading">Memuat cerita...</div>')},showError(e){const t=document.querySelector("#stories");t&&(t.innerHTML=`<div class="error">Error: ${e}</div>`)},showEmpty(){const e=document.querySelector("#stories");e&&(e.innerHTML='<div class="empty">Belum ada cerita yang dibagikan</div>')},async showStories(e){const t=document.querySelector("#stories");t.innerHTML="";const r=await d.fetchAll();e.forEach(async i=>{const a=document.createElement("div");a.innerHTML=x(i);const s=a.firstElementChild,n=s.querySelector(`#favoriteButtonContainer-${i.id}`);if(n){const c=async l=>{await d.fetchById(l.id)?(await d.remove(l.id),alert("Story dihapus dari favorit")):(await d.save(l),alert("Story ditambahkan ke favorit"));const w=await d.fetchAll(),R=S({story:l,favoriteStories:w,onFavoriteClick:c});n.innerHTML="",n.appendChild(R)},o=S({story:i,favoriteStories:r,onFavoriteClick:c});n.innerHTML="",n.appendChild(o)}t.appendChild(s)}),this._setupDeleteButtons()},async initializeFavoriteButton(e,t){const r=await d.fetchAll(),i=document.getElementById(t);if(!i)return;const s=S({story:e,favoriteStories:r,onFavoriteClick:async n=>{await d.fetchById(n.id)?await d.remove(n.id):await d.save(n),this.initializeFavoriteButton(n,t)}});i.innerHTML="",i.appendChild(s)}};class ae{constructor({view:t}){this._uiView=t,this._apiService=k}isUserLoggedIn(){return this._apiService.checkAuthentication()}async uploadStory({description:t,photoFile:r,lat:i,lon:a}){var s,n,c;try{if(!this.isUserLoggedIn())return alert("Silakan login terlebih dahulu sebelum mengunggah cerita."),{success:!1};if(!t||!r||!i||!a)return alert("Semua kolom wajib diisi, termasuk judul, deskripsi, foto, dan lokasi."),{success:!1};if(!r||r.size===0)return alert("File foto tidak valid atau kosong."),{success:!1};(s=this._uiView)!=null&&s.showLoading&&this._uiView.showLoading(!0);const{error:o,message:l}=await this._apiService.addStory({description:t,photoFile:r,lat:i,lon:a});return o?(alert(`Gagal mengunggah cerita: ${l}`),(n=this._uiView)!=null&&n.showLoading&&this._uiView.showLoading(!1),{success:!1}):(alert("Cerita berhasil ditambahkan!"),{success:!0})}catch(o){return alert(`Terjadi kesalahan saat mengunggah cerita: ${o.message}`),(c=this._uiView)!=null&&c.showLoading&&this._uiView.showLoading(!1),{success:!1}}}async convertBase64ToFile(t,r){const a=await(await fetch(`data:image/jpeg;base64,${t}`)).blob();return new File([a],r,{type:"image/jpeg"})}setupMapPicker(t,r,i){const a=L.map(t).setView([-2.548926,118.0148634],5),s={Street:L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenStreetMap contributors"}),Satellite:L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",{attribution:"Tiles &copy; Esri"}),Topo:L.tileLayer("https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png",{attribution:"&copy; OpenTopoMap"})};s.Street.addTo(a),L.control.layers(s).addTo(a);let n=null;return a.on("click",c=>{const{lat:o,lng:l}=c.latlng;r.innerHTML=`
        <p><strong>Lokasi dipilih:</strong> ${o.toFixed(6)}, ${l.toFixed(6)}</p>
      `,n?n.setLatLng([o,l]):n=L.marker([o,l]).addTo(a),i&&i({lat:o,lng:l})}),a}}class se{constructor({cameraElement:t,canvasElement:r,capturedImageElement:i}){this._cameraElement=t,this._canvasElement=r,this._capturedImageElement=i,this._stream=null}async init(){try{this._stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"}}),this._cameraElement.srcObject=this._stream}catch(t){return console.error("Error accessing camera:",t),{error:!0,message:"Tidak dapat mengakses kamera"}}return{error:!1}}captureImage(){const t=this._canvasElement.getContext("2d");this._canvasElement.width=this._cameraElement.videoWidth,this._canvasElement.height=this._cameraElement.videoHeight,t.drawImage(this._cameraElement,0,0,this._canvasElement.width,this._canvasElement.height);const r=this._canvasElement.toDataURL("image/jpeg").split(",")[1];return this._capturedImageElement.src=this._canvasElement.toDataURL("image/jpeg"),this._capturedImageElement.style.display="block",this._cameraElement.style.display="none",this.stopStream(),r}resumeCamera(){this._stream?(this._capturedImageElement.style.display="none",this._cameraElement.style.display="block"):this.init()}stopStream(){this._stream&&(this._stream.getTracks().forEach(t=>{t.stop()}),this._stream=null)}get imageCapture(){return this._capturedImageElement.src}}const ne={async render(){return v({title:"Tambah Cerita Baru",content:`
        <form id="addStoryForm" class="add-story-form">

          <div class="form-group">
            <label class="form-label">Foto</label>
            <div class="camera-container">
              <video id="camera" autoplay playsinline></video>
              <canvas id="canvas" class="d-none"></canvas>
              <img id="capturedImage" alt="Captured Image">
            </div>
            <div class="camera-buttons">
              <button type="button" id="captureButton" class="btn btn-primary">Ambil Foto</button>
              <button type="button" id="recaptureButton" class="btn btn-secondary">Ambil Ulang</button>
            </div>
          </div>
          
          <div class="form-group">
            <label class="form-label">Lokasi</label>
            <p>Klik pada peta untuk menentukan lokasi cerita</p>
            <div id="pickLocationMap" class="map-container"></div>
            <div id="selectedLocation" class="selected-location">
              <span>Belum ada lokasi yang dipilih</span>
            </div>
          </div>
          
          <div class="form-group">
            <label for="description" class="form-label">Cerita</label>
            <textarea id="description" class="form-textarea" required></textarea>
          </div>
          
          <button type="submit" class="btn btn-primary">Bagikan Cerita</button>
        </form>
      `})},async afterRender(){if(this._storyUploader=new ae({view:this}),!this._storyUploader.isUserLoggedIn()){alert("Anda harus login terlebih dahulu untuk menambahkan cerita."),window.location.hash="#/login";return}"Notification"in window&&await Notification.requestPermission()==="granted"&&(await m.isSubscribed()||await m.subscribeToPushNotification());const e=document.querySelector("#camera"),t=document.querySelector("#canvas"),r=document.querySelector("#capturedImage"),i=document.querySelector("#captureButton"),a=document.querySelector("#recaptureButton");this._cameraInitiator=new se({cameraElement:e,canvasElement:t,capturedImageElement:r}),await this._cameraInitiator.init(),this._storyUploader.setupMapPicker(document.getElementById("pickLocationMap"),document.getElementById("selectedLocation"),n=>{this._selectedLocation=n}),i.addEventListener("click",()=>{this._imageBase64=this._cameraInitiator.captureImage(),a.style.display="inline-block"}),a.addEventListener("click",()=>{this._cameraInitiator.resumeCamera()});const s=document.querySelector("#addStoryForm");s.addEventListener("submit",async n=>{n.preventDefault();const c=document.querySelector("#description").value.trim();if(!c){alert("Cerita tidak boleh kosong!");return}if(!this._imageBase64){alert("Silakan ambil foto terlebih dahulu!");return}if(!this._selectedLocation){alert("Silakan pilih lokasi pada peta!");return}try{const o=s.querySelector('button[type="submit"]');o.disabled=!0,o.textContent="Mengirim...";const l=await this._storyUploader.convertBase64ToFile(this._imageBase64,"story.jpg"),{success:h}=await this._storyUploader.uploadStory({description:c,photoFile:l,lat:this._selectedLocation.lat,lon:this._selectedLocation.lng});if(!h){o.disabled=!1,o.textContent="Bagikan Cerita";return}if("Notification"in window&&Notification.permission==="granted")try{await(await navigator.serviceWorker.ready).showNotification("Story Baru",{icon:"/icons/icon-192x192.png",badge:"/icons/icon-72x72.png",vibrate:[100,50,100],data:{url:"/"}})}catch(w){console.error("Error showing notification:",w)}alert("Cerita berhasil dibagikan!"),window.location.hash="#/"}catch(o){alert(`Gagal mengirim cerita: ${o.message}`);const l=s.querySelector('button[type="submit"]');l.disabled=!1,l.textContent="Bagikan Cerita"}}),window.addEventListener("hashchange",()=>{this._cameraInitiator.stopStream()})}},oe={async render(){return v({title:"Cerita Tersimpan",content:`
        <div class="stories" id="stories"></div>
      `})},async afterRender(){if(!document.querySelector("#stories")){console.error("Stories container not found");return}this.showLoading();try{const t=await d.fetchAll();t&&t.length>0?await this.showStories(t):this.showEmpty()}catch(t){console.error("Error loading favorite stories:",t),this.showError(t.message)}},showLoading(){const e=document.querySelector("#stories");e&&(e.innerHTML=`
        <div class="loading">Memuat cerita tersimpan...</div>
      `)},showError(e){const t=document.querySelector("#stories");t&&(t.innerHTML=`
        <div class="error">Error: ${e}</div>
      `)},showEmpty(){const e=document.querySelector("#stories");e&&(e.innerHTML=`
        <div class="empty">
          <i class="far fa-heart"></i>
          <p>Belum ada cerita yang disimpan</p>
          <a href="#/" class="btn btn-primary">Jelajahi Cerita</a>
        </div>
      `)},async showStories(e){const t=document.querySelector("#stories");if(t.innerHTML="",e.forEach(async r=>{const i=document.createElement("div");i.innerHTML=x(r);const a=i.firstElementChild,s=a.querySelector(`#favoriteButtonContainer-${r.id}`);if(s){const c=S({story:r,favoriteStories:e,onFavoriteClick:async o=>{try{await d.remove(o.id),a.style.transition="all 0.3s ease",a.style.opacity="0",a.style.transform="scale(0.8)",setTimeout(()=>{a.remove(),document.querySelectorAll(".story-item").length===0&&this.showEmpty()},300)}catch(l){console.error("Error removing story from favorites:",l),alert("Gagal menghapus story dari favorit")}}});s.innerHTML="",s.appendChild(c)}t.appendChild(a)}),!document.querySelector("#favoritesEmptyStyle")){const r=document.createElement("style");r.id="favoritesEmptyStyle",r.textContent=`
        .empty {
          text-align: center;
          padding: 2rem;
          color: #666;
        }
        .empty i {
          font-size: 3rem;
          margin-bottom: 1rem;
          color: #e74c3c;
        }
        .empty p {
          margin-bottom: 1rem;
          font-size: 1.1rem;
        }
      `,document.head.appendChild(r)}}};class ce{constructor({view:t}){this._uiView=t,this._authApi=k}isUserAuthenticated(){return this._authApi.checkAuthentication()}async loginUser({email:t,password:r}){try{this._uiView.showLoading(!0);const{error:i,message:a,data:s}=await this._authApi.login({email:t,password:r});return this._uiView.showLoading(!1),i?(this._uiView.showError(`Login gagal: ${a}`),{success:!1}):(localStorage.setItem("token",s.token),{success:!0})}catch(i){return this._uiView.showError(`Error: ${i.message}`),this._uiView.showLoading(!1),{success:!1}}}}const le={async render(){return v({title:"Login",content:`
        <div class="auth-form-container">
          <form id="loginForm" class="auth-form">
            <div class="form-group">
              <label for="email" class="form-label">Email</label>
              <input type="email" id="email" class="form-input" required>
            </div>
            
            <div class="form-group">
              <label for="password" class="form-label">Password</label>
              <input type="password" id="password" class="form-input" required>
            </div>
            
            <button type="submit" class="btn btn-primary">Login</button>
            
            <p class="auth-link">Belum punya akun? <a href="#/register">Daftar sekarang</a></p>
          </form>
        </div>
      `})},async afterRender(){if(this._presenter=new ce({view:this}),this._presenter.isUserAuthenticated()){window.location.hash="#/";return}document.querySelector("#loginForm").addEventListener("submit",async t=>{t.preventDefault();const r=document.querySelector("#email").value,i=document.querySelector("#password").value,{success:a}=await this._presenter.loginUser({email:r,password:i});a&&(window.location.hash="#/")})},showLoading(e){const t=document.querySelector('#loginForm button[type="submit"]');t&&(t.disabled=e,t.textContent=e?"Loading...":"Login")},showError(e){alert(e)}};class de{constructor({view:t}){this._uiView=t,this._authService=k}isUserAuthenticated(){return this._authService.checkAuthentication()}async registerUser({name:t,email:r,password:i}){try{this._uiView.showLoading(!0);const{error:a,message:s}=await this._authService.register({name:t,email:r,password:i});return this._uiView.showLoading(!1),a?(this._uiView.showError(`Registrasi gagal: ${s}`),{success:!1}):(this._uiView.showSuccess("Pendaftaran berhasil! Silakan login."),{success:!0})}catch(a){return this._uiView.showError(`Error: ${a.message}`),this._uiView.showLoading(!1),{success:!1}}}}const ue={async render(){return v({title:"Daftar Akun",content:`
        <div class="auth-form-container">
          <form id="registerForm" class="auth-form">
            <div class="form-group">
              <label for="name" class="form-label">Nama</label>
              <input type="text" id="name" class="form-input" required>
            </div>
            
            <div class="form-group">
              <label for="email" class="form-label">Email</label>
              <input type="email" id="email" class="form-input" required>
            </div>
            
            <div class="form-group">
              <label for="password" class="form-label">Password</label>
              <input type="password" id="password" class="form-input" required minlength="6">
            </div>
            
            <button type="submit" class="btn btn-primary">Daftar</button>
            
            <p class="auth-link">Sudah punya akun? <a href="#/login">Login</a></p>
          </form>
        </div>
      `})},async afterRender(){if(this._presenter=new de({view:this}),this._presenter.isUserAuthenticated()){window.location.hash="#/";return}document.querySelector("#registerForm").addEventListener("submit",async t=>{t.preventDefault();const r=document.querySelector("#name").value,i=document.querySelector("#email").value,a=document.querySelector("#password").value,{success:s}=await this._presenter.registerUser({name:r,email:i,password:a});s&&(window.location.hash="#/login")})},showLoading(e){const t=document.querySelector('#registerForm button[type="submit"]');t&&(t.disabled=e,t.textContent=e?"Loading...":"Daftar")},showError(e){alert(e)},showSuccess(e){alert(e)}},q={render(){return`
        <div class="not-found-container">
          <div class="not-found-content">
            <h2 class="not-found-title">404</h2>
            <div class="not-found-image">
              <i class="fas fa-map-signs fa-5x"></i>
            </div>
            <h3>Halaman Tidak Ditemukan</h3>
            <p>Maaf, kami tidak dapat menemukan halaman yang Anda cari.</p>
            <p>Mungkin halaman sudah dihapus atau URL yang Anda ketik salah.</p>
            <a href="#/" class="btn btn-primary">Kembali ke Beranda</a>
          </div>
        </div>
      `},afterRender(){return Promise.resolve()}},me={"/":ie,"/add":ne,"/favorites":oe,"/login":le,"/register":ue},he={init({button:e,drawer:t,content:r}){e.addEventListener("click",i=>{this._toggleDrawer(i,t)}),r.addEventListener("click",i=>{this._closeDrawer(i,t)}),t.addEventListener("transitionend",()=>{t.classList.contains("open")||window.dispatchEvent(new Event("drawerTransitionEnd"))})},_toggleDrawer(e,t){e.stopPropagation(),t.classList.toggle("open")},_closeDrawer(e,t){e.stopPropagation(),t.classList.remove("open")}};class pe{constructor({content:t}){this._content=t,this._renderAppShell()}_renderAppShell(){this._renderDrawerContent()}_renderDrawerContent(){const t=document.querySelector("#navigationDrawer");t&&(t.innerHTML=this._navigationTemplate(),t.classList.add("app-bar__navigation"))}_navigationTemplate(){return`
      <ul>
        <li><a href="#/"><i class="fas fa-home"></i> Home</a></li>
        <li><a href="#/add"><i class="fas fa-plus-circle"></i> Tambah Cerita</a></li>
        <li><a href="#/favorites"><i class="fas fa-heart"></i> Cerita Tersimpan</a></li>
        <li id="authNavItem">
          ${this._authNavTemplate()}
        </li>
      </ul>
    `}_authNavTemplate(){return`
      <a href="#/login"><i class="fas fa-sign-in-alt"></i> Login</a>
    `}}class fe{constructor({content:t,button:r,drawer:i}){this._content=t,this._button=r,this._drawer=i,this._appShell=new pe({content:this._content}),this._initialAppShell(),this._initSkipToContent()}_initialAppShell(){he.init({button:this._button,drawer:this._drawer,content:this._content})}_initSkipToContent(){const t=document.querySelector(".skip-link"),r=document.querySelector("#mainContent");t&&r&&t.addEventListener("click",function(i){i.preventDefault(),t.blur(),r.focus(),r.scrollIntoView()})}async renderPage(){try{const t=document.querySelector("#navigationDrawer");t&&t.classList.contains("open")&&(t.classList.remove("open"),await new Promise(c=>{const o=()=>{window.removeEventListener("drawerTransitionEnd",o),c()};window.addEventListener("drawerTransitionEnd",o)}));const r=U.parseActiveUrlWithCombiner(),i=me[r];this._content.innerHTML="";const a=document.createElement("div");a.className="loading",a.textContent="Memuat halaman...",this._content.appendChild(a);const s=i?await i.render():await q.render();this._content.innerHTML=s,i?await i.afterRender():await q.afterRender();const n=document.querySelector("#mainContent");n&&(n.focus(),n.setAttribute("tabindex","-1")),M()}catch(t){console.error("Error rendering page:",t),this._content&&(this._content.innerHTML='<div class="error">Terjadi kesalahan saat memuat halaman</div>')}}}const O=new fe({content:document.querySelector("#mainContent"),button:document.querySelector("#hamburgerButton"),drawer:document.querySelector("#navigationDrawer")});function M(){const e=document.querySelector("#authNavItem");if(e)if(localStorage.getItem("token")){e.innerHTML=`
      <a href="#/" id="logoutButton"><i class="fas fa-sign-out-alt"></i> Logout</a>
    `;const t=document.querySelector("#logoutButton");t&&t.addEventListener("click",async r=>{if(r.preventDefault(),"serviceWorker"in navigator&&"PushManager"in window)try{await m.isSubscribed()&&(await m.unsubscribeFromPushNotification(),console.log("Successfully unsubscribed from push notifications"))}catch(i){console.error("Error unsubscribing from push notification:",i)}localStorage.removeItem("token"),M(),window.location.hash="#/"})}else e.innerHTML=`
      <a href="#/login"><i class="fas fa-sign-in-alt"></i> Login</a>
    `}window.addEventListener("load",async()=>{await O.renderPage(),M()});window.addEventListener("hashchange",async()=>{await O.renderPage()});
