importScripts("https://storage.googleapis.com/workbox-cdn/releases/6.5.4/workbox-sw.js");workbox.setConfig({debug:!1});workbox.precaching.precacheAndRoute([{"revision":null,"url":"assets/index-62851fc7.css"},{"revision":null,"url":"assets/main-1fac13ca.js"},{"revision":"361f5013f4faeff95348d793116eecdc","url":"index.html"},{"revision":"0d8c4d82ae12e496c99f2a0d11085f8a","url":"offline.html"},{"revision":"1872c500de691dce40960bb85481de07","url":"registerSW.js"},{"revision":"69bd67d4221de59136edac9177c8c0b6","url":"icons/icon-128x128.png"},{"revision":"11626da6fb80365b9e8187203940cda8","url":"icons/icon-144x144.png"},{"revision":"048a4c76d91338415b634ec64c9f45bf","url":"icons/icon-152x152.png"},{"revision":"b32a22a791a5c01d229d8e3d5dfe9cae","url":"icons/icon-192x192.png"},{"revision":"852f5a947a43a145fb6f88951b7e17a4","url":"icons/icon-384x384.png"},{"revision":"ac73f380ba0147f4fa5951dfaba2a665","url":"icons/icon-512x512.png"},{"revision":"622905a7f4073a00d11a1e05dce7b9c1","url":"icons/icon-72x72.png"},{"revision":"5cf8e5570f376d50d945b10a8efa40fc","url":"icons/icon-96x96.png"},{"revision":"28636b0c42e499fd9ec096fe1436286d","url":"manifest.webmanifest"}]);self.addEventListener("message",e=>{e.data&&e.data.type==="SKIP_WAITING"&&self.skipWaiting()});workbox.routing.registerRoute(({request:e,url:o})=>{const s=e.destination==="image",a=o.origin==="https://story-api.dicoding.dev"&&o.pathname.includes("/images/");return s&&a?(console.log("[Service Worker] Processing story image:",o.href),!0):!1},new workbox.strategies.StaleWhileRevalidate({cacheName:"story-images",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxEntries:100,maxAgeSeconds:30*24*60*60,purgeOnQuotaError:!0})]}));workbox.routing.registerRoute(({url:e})=>e.origin==="https://story-api.dicoding.dev"&&!e.pathname.includes("/images/"),new workbox.strategies.NetworkFirst({cacheName:"api-cache",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxEntries:100,maxAgeSeconds:24*60*60})],networkTimeoutSeconds:3}));workbox.routing.registerRoute(({request:e})=>e.destination==="style"||e.destination==="script"||e.destination==="font",new workbox.strategies.CacheFirst({cacheName:"static-assets",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxEntries:50,maxAgeSeconds:30*24*60*60})]}));workbox.routing.setCatchHandler(async({request:e})=>{if(console.log("[Service Worker] Catch handler for:",e.url),e.destination==="image")try{const s=await(await caches.open("story-images")).match(e);if(s)return console.log("[Service Worker] Returning cached image:",e.url),s}catch(o){console.error("[Service Worker] Cache error:",o)}return e.destination==="document"?caches.match("/offline.html"):Response.error()});workbox.routing.registerRoute(/^https:\/\/fonts\.googleapis\.com/,new workbox.strategies.CacheFirst({cacheName:"google-fonts-stylesheets",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxAgeSeconds:60*60*24*365,maxEntries:30})]}));workbox.routing.registerRoute(/^https:\/\/fonts\.gstatic\.com/,new workbox.strategies.CacheFirst({cacheName:"google-fonts-webfonts",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxAgeSeconds:60*60*24*365,maxEntries:30})]}));workbox.routing.registerRoute(({request:e})=>e.destination==="style"||e.url.endsWith(".css"),new workbox.strategies.StaleWhileRevalidate({cacheName:"styles",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:50,maxAgeSeconds:30*24*60*60,purgeOnQuotaError:!0}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),{handlerDidError:async({request:e})=>(console.log("[Service Worker] Network error for CSS, trying cache:",e.url),await(await caches.open("styles")).match(e))}]}));workbox.routing.registerRoute(/^https:\/\/cdnjs\.cloudflare\.com\/ajax\/libs\/font-awesome/,new workbox.strategies.CacheFirst({cacheName:"font-awesome",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxAgeSeconds:60*60*24*30,maxEntries:30})]}));workbox.routing.registerRoute(({url:e})=>e.origin==="https://cdnjs.cloudflare.com"||e.origin==="https://unpkg.com",new workbox.strategies.CacheFirst({cacheName:"cdn-cache",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:30,maxAgeSeconds:30*24*60*60}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]}));workbox.routing.registerRoute(({request:e})=>e.destination==="document"||e.url.endsWith(".html")||e.url===self.location.origin+"/",new workbox.strategies.NetworkFirst({cacheName:"pages",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxEntries:50,maxAgeSeconds:24*60*60})],networkTimeoutSeconds:3}));workbox.routing.setDefaultHandler(new workbox.strategies.StaleWhileRevalidate({cacheName:"default-cache",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:50,maxAgeSeconds:7*24*60*60}),new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]})]}));workbox.routing.registerRoute(({request:e,url:o})=>e.destination==="style"||o.pathname.endsWith(".css")||o.pathname.includes("/src/styles/"),new workbox.strategies.CacheFirst({cacheName:"local-styles",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxAgeSeconds:60*60*24*30,maxEntries:20})]}));self.addEventListener("activate",e=>{e.waitUntil(Promise.all([caches.open("story-images"),caches.open("api-cache"),caches.open("static-assets"),caches.open("pages")]).then(()=>{console.log("[Service Worker] Caches have been created")}))});self.addEventListener("fetch",e=>{const o=new URL(e.request.url);if(o.origin==="https://story-api.dicoding.dev"&&o.pathname.startsWith("/images/stories/")){console.log("[Service Worker] Fetching story image:",o.href),e.respondWith(caches.open("story-images").then(s=>s.match(e.request).then(a=>a?(console.log("[Service Worker] Returning cached image:",o.href),a):fetch(e.request).then(t=>(t.ok&&(console.log("[Service Worker] Caching new image:",o.href),s.put(e.request,t.clone())),t)).catch(t=>(console.error("[Service Worker] Fetch failed:",t),s.match(e.request))))));return}});workbox.routing.registerRoute(/^https:\/\/ui-avatars\.com/,new workbox.strategies.CacheFirst({cacheName:"ui-avatars",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxAgeSeconds:60*60*24*30,maxEntries:50})]}));workbox.routing.registerRoute(/^https:\/\/api\.maptiler\.com/,new workbox.strategies.CacheFirst({cacheName:"maptiler-api",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxAgeSeconds:60*60*24*30,maxEntries:100})]}));workbox.routing.registerRoute(({request:e,url:o})=>o.origin===self.location.origin&&(e.destination==="image"||o.pathname.startsWith("/src/public/")),new workbox.strategies.CacheFirst({cacheName:"static-images",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxEntries:60,maxAgeSeconds:30*24*60*60,purgeOnQuotaError:!0})]}));workbox.routing.registerRoute(({url:e})=>e.origin==="https://story-api.dicoding.dev",new workbox.strategies.NetworkFirst({cacheName:"api-responses",plugins:[new workbox.cacheableResponse.CacheableResponsePlugin({statuses:[0,200]}),new workbox.expiration.ExpirationPlugin({maxEntries:100,maxAgeSeconds:30*24*60*60})],networkTimeoutSeconds:3}));self.skipWaiting();workbox.core.clientsClaim();
